{
  "openapi": "3.0.3",
  "info": {
    "title": "GenHMS API",
    "description": "This document provides the GenHMS Backend REST API interface.\n\nTest Server for GenHMS Backend REST API.\n\nhttps://hms.genyazilim.com/api\n\nDocument Change Log\n\n|   Published Date  |   Document Version Number |   Description of Revision       |\n|-------------------|---------------------------|---------------------------------|\n| 12.4.2023       | v1.0.0   | - Initial Pre-Alpha.<br/>|\n",
    "contact": {
      "name": "GenYazilim",
      "url": "https://www.genotip.app/contact",
      "email": "info@genyazilim.com"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Appointment Resource",
      "description": "All the appointment api methods"
    },
    {
      "name": "Authentication Resource",
      "description": "All the user authentication related api methods"
    },
    {
      "name": "Lookup Resource",
      "description": "All the api lookups related api methods"
    },
    {
      "name": "Practitioner Resource",
      "description": "All the practitioner api methods"
    },
    {
      "name": "Private Resource",
      "description": "All the user private api methods"
    }
  ],
  "paths": {
    "/app/*": {
      "get": {
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/appointments/clinics": {
      "get": {
        "tags": [
          "Appointment Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Clinic"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/appointments/doctor/{id}/cv": {
      "get": {
        "tags": [
          "Appointment Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/appointments/doctor/{rsId}/image": {
      "get": {
        "tags": [
          "Appointment Resource"
        ],
        "parameters": [
          {
            "name": "rsId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/appointments/profile": {
      "post": {
        "tags": [
          "Appointment Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/appointments/profile/image": {
      "get": {
        "tags": [
          "Appointment Resource"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/appointments/slots": {
      "post": {
        "tags": [
          "Appointment Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SlotRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Slot"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication Resource"
        ],
        "summary": "Refresh Token Pair",
        "description": "Refreshes new token pair.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication Resource"
        ],
        "summary": "Register User",
        "description": "Registers a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register/{token}": {
      "get": {
        "tags": [
          "Authentication Resource"
        ],
        "summary": "Validate User via EMail",
        "description": "Validates user via email.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/resetpwd": {
      "post": {
        "tags": [
          "Authentication Resource"
        ],
        "summary": "Forgot Password Request",
        "description": "Forgot password request by user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/resetpwd/{token}": {
      "get": {
        "tags": [
          "Authentication Resource"
        ],
        "summary": "Generate Password via EMail",
        "description": "Generate password via email.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token": {
      "post": {
        "tags": [
          "Authentication Resource"
        ],
        "summary": "Get Token and Refresh Token",
        "description": "Generates new token pair with given username.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/lookup/allergies": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/bloodgroups": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/diseases": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/instancetypes": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/message.properties": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/periods": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/relationships": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/reports": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/userstatus": {
      "get": {
        "tags": [
          "Lookup Resource"
        ],
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "schema": {
              "default": "TR",
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "default": "tr",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeyValue"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/practitioner/allergies/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user allergies",
        "description": "Fetches a list of all allergies of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient whose allergy records will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/contacts/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user contacts",
        "description": "Fetches a list of all contacts of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient whose contacts will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/diseases/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user diseases",
        "description": "Fetches a list of all diseases of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient whose disease records will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/diseasesinfamily/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user family diseases",
        "description": "Fetches a list of all family diseases of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient whose family disease records will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/drugusage/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user drug usages",
        "description": "Fetches a list of all drug usages of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient whose drug records will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/patient": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch all patients based on certain search criteria",
        "description": "This operation retrieves a list of PatientIdentity objects based on the provided search criteria. All criteria are optional and used for exact matches. The criteria include: name, surname, file number (DOSYANO), and social security number (SSN).",
        "parameters": [
          {
            "name": "fileNo",
            "in": "query",
            "description": "The value that will be searched in DOSYANO values of patients. Exact search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "The text that will be searched in names of patients. Exact search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "securityNumber",
            "in": "query",
            "description": "The text that will be searched in SSN values of patients. Exact search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "surname",
            "in": "query",
            "description": "The text that will be searched in surnames of patients. Exact search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Patients Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/patient/appointments/{pageNumber}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch appointments",
        "description": "This operation retrieves a map of appointments for the logged-in doctor on a specific date. The date is calculated based on the provided page number, with each page representing a 12-day span from the current date. The method returns a map where the key is a date and the value is a list of DoctorAppointment objects for that date.",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "path",
            "description": "The page index of the results",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Doctor or Department Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/patient/doctorOrderPatients": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch doctor's patients",
        "description": "This operation retrieves a list of DoctorOrderPatientIdentity objects for the currently logged-in doctor. Optionally, a name search string can be provided, in which case only patients with a full name containing that string (case-insensitive) will be returned.",
        "parameters": [
          {
            "name": "nameSearch",
            "in": "query",
            "description": "The text that will be searched in full name of patients",
            "schema": {
              "default": "",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Doctor or Patients Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/patient/doctorPatients": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch doctor's patients with pagination",
        "description": "This operation retrieves a paginated list of DoctorPatientIdentity objects for the currently logged-in doctor. Optionally, a name search string can be provided, in which case only patients with a full name containing that string (case-insensitive) will be returned. Pagination is achieved by specifying the number of records to skip and the number of records to take.",
        "parameters": [
          {
            "name": "nameSearch",
            "in": "query",
            "description": "The text that will be searched in full name of patients",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Amount of data in response that will be skipped",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "Amount of data that will be present in response",
            "schema": {
              "format": "int32",
              "default": 20,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Doctor or Patients Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/patient/order": {
      "put": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Update a specific order",
        "description": "This operation updates an order for a specific patient. The patient and order are identified using the provided patient ID and order details. The order can only be updated if its status (DURUM) is 0. If successful, the method updates the order's details including date of inclusion, plan date, date of change, changing doctor, notes, and verbal order.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqUpdateOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Patient or Record Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error, Not Updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Add a new order",
        "description": "This operation creates a new order for a specific patient and returns the created order. The patient is identified using the provided patient ID. The method also checks for the patient's arrival and verifies the patient's identity. The order details including date of inclusion, plan date, adding doctor, notes, doctor, order number, status, verbal order, arrival number, and arrival ID are all set and added.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqAddOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Patient or Record Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Delete a specific order",
        "description": "This operation deletes a specific order and its details associated with the provided patientand order ID. It first validates the existence of the patient and the order. The order can only bedeleted if its status (DURUM) is 0. If the order is successfully deleted, all order details linkedwith that order ID are also removed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReqDeleteOrder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order is deleted",
            "content": {
              "application/json": {}
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/patient/test": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/profile/image/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user image",
        "description": "Fetches the image of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user whose image will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/octet-stream": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/profile/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user profile",
        "description": "Fetches the profile of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the user to be searched",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/reports/{reportType}/{prescriptionId}/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Generate and fetch a report in PDF format",
        "description": "This operation generates a report of a given type for a specific prescription and patient, and returns it in PDF format. The report type can be PRESCRIPTION, MEDICATION, RADIOLOGY, or PATHOLOGY.",
        "parameters": [
          {
            "name": "prescriptionId",
            "in": "path",
            "description": "The id of the prescription to be queried",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "description": "The type of the report to be generated",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportTypeEnum"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient that report will belong to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report Successfully Generated and Returned",
            "content": {
              "application/pdf": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorException"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/reports/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch all reports for a user",
        "description": "Fetches a map of all reports for a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient whose reports will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/practitioner/surgeries/{userId}": {
      "get": {
        "tags": [
          "Practitioner Resource"
        ],
        "summary": "Fetch user surgeries",
        "description": "Fetches a list of all surgeries of a user by the user's ID.",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The id of the patient surgery records will be drawn",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {}
            }
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "doctor"
            ]
          }
        ]
      }
    },
    "/private/allergies": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAllergy"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAllergy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAllergy"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/allergies/{id}": {
      "delete": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/changepassword": {
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/contacts": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserContact"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserContact"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/contacts/{id}": {
      "delete": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/diseases": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDisease"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDisease"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDisease"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/diseases/{id}": {
      "delete": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/diseasesinfamily": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDiseaseInFamily"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDiseaseInFamily"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDiseaseInFamily"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/diseasesinfamily/{id}": {
      "delete": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/drugusage": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDrugUsage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDrugUsage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDrugUsage"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/drugusage/{id}": {
      "delete": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/profile": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/profile/image": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/reports": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ReportItem"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/reports/favorite": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserFavoriteReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserFavoriteReport"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/reports/favorite/{id}": {
      "delete": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/reports/{reportType}/{id}": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportType",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportTypeEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/surgeries": {
      "get": {
        "tags": [
          "Private Resource"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserSurgery"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Private Resource"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSurgery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSurgery"
                }
              }
            }
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    },
    "/private/surgeries/{id}": {
      "delete": {
        "tags": [
          "Private Resource"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Not Authorized"
          },
          "403": {
            "description": "Not Allowed"
          }
        },
        "security": [
          {
            "BearerAuthentication": [
              "admin",
              "user"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_in": {
            "format": "int64",
            "type": "integer"
          },
          "refresh_expires_in": {
            "format": "int64",
            "type": "integer"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "not-before-policy": {
            "format": "int32",
            "type": "integer"
          },
          "session_state": {
            "type": "string"
          },
          "otherClaims": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "scope": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "error_description": {
            "type": "string"
          },
          "error_uri": {
            "type": "string"
          }
        }
      },
      "AlgorithmConstraints": {
        "type": "object"
      },
      "AllergyEnum": {
        "enum": [
          "BUG",
          "MEDICINE",
          "SEASONAL",
          "FOOD",
          "OTHER"
        ],
        "type": "string"
      },
      "Appointment API": {
        "type": "object",
        "properties": {
          "jwt": {
            "$ref": "#/components/schemas/JsonWebToken"
          },
          "service": {
            "$ref": "#/components/schemas/GenotipMapper"
          },
          "clinics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Clinic"
            }
          },
          "userImage": {
            "$ref": "#/components/schemas/Response"
          }
        }
      },
      "ArrivalDto": {
        "type": "object",
        "properties": {
          "ID": {
            "format": "int32",
            "type": "integer"
          },
          "DOSYANO": {
            "type": "string"
          },
          "GELISNO": {
            "type": "integer"
          },
          "POLIKLINIK": {
            "type": "string"
          },
          "DOKTORKOD": {
            "type": "string"
          },
          "EKLEYEN": {
            "type": "string"
          },
          "DOKTOR": {
            "type": "string"
          },
          "TEDAVI": {
            "type": "string"
          },
          "SUBE": {
            "type": "string"
          },
          "SUBE_ID": {
            "format": "int32",
            "type": "integer"
          },
          "GIRISTARIH": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "CIKISTARIH": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "KIMLIKID": {
            "format": "int32",
            "type": "integer"
          },
          "PROTOKOLNO": {
            "type": "string"
          },
          "iD": {
            "format": "int32",
            "type": "integer"
          },
          "dOSYANO": {
            "type": "string"
          },
          "gELISNO": {
            "type": "integer"
          },
          "pOLIKLINIK": {
            "type": "string"
          },
          "dOKTORKOD": {
            "type": "string"
          },
          "eKLEYEN": {
            "type": "string"
          },
          "dOKTOR": {
            "type": "string"
          },
          "tEDAVI": {
            "type": "string"
          },
          "sUBE": {
            "type": "string"
          },
          "sUBE_ID": {
            "format": "int32",
            "type": "integer"
          },
          "gIRISTARIH": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "cIKISTARIH": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "kIMLIKID": {
            "format": "int32",
            "type": "integer"
          },
          "pROTOKOLNO": {
            "type": "string"
          }
        }
      },
      "ArrivalMapper": {
        "type": "object",
        "properties": {
          "arrivalList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArrivalDto"
            }
          }
        }
      },
      "Authentication API": {
        "type": "object",
        "properties": {
          "ttlRefreshToken": {
            "format": "int64",
            "type": "integer"
          },
          "ttlValidationToken": {
            "format": "int64",
            "type": "integer"
          },
          "realm": {
            "type": "string"
          },
          "jwtToken": {
            "$ref": "#/components/schemas/JsonWebToken"
          },
          "parser": {
            "$ref": "#/components/schemas/JWTParser"
          },
          "mapper": {
            "$ref": "#/components/schemas/GenotipMapper"
          },
          "adminKeycloak": {
            "$ref": "#/components/schemas/Keycloak"
          },
          "keycloakProducer": {
            "$ref": "#/components/schemas/KeycloakProducer"
          }
        }
      },
      "BadRequestException": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/Response"
          }
        }
      },
      "BiFunctionSSLSocketListStringString": {
        "type": "object"
      },
      "BloodGroupEnum": {
        "enum": [
          "A_RHD_POSITIVE",
          "A_RHD_NEGATIVE",
          "B_RHD_POSITIVE",
          "B_RHD_NEGATIVE",
          "O_RHD_POSITIVE",
          "O_RHD_NEGATIVE",
          "AB_RHD_POSITIVE",
          "AB_RHD_NEGATIVE"
        ],
        "type": "string"
      },
      "Certificate": {
        "type": "object",
        "properties": {
          "encoded": {
            "format": "binary",
            "type": "string"
          },
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "properties": {
          "oldpwd": {
            "type": "string"
          },
          "newpwd": {
            "type": "string"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/Configuration"
          },
          "sslContext": {
            "$ref": "#/components/schemas/SSLContext"
          },
          "hostnameVerifier": {
            "$ref": "#/components/schemas/HostnameVerifier"
          }
        }
      },
      "Clinic": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "doctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Doctor"
            }
          }
        }
      },
      "ClinicDoctors": {
        "type": "object",
        "properties": {
          "BOLUM": {
            "type": "string"
          },
          "BOLUMADI": {
            "type": "string"
          },
          "RSID": {
            "type": "string"
          },
          "DRID": {
            "type": "string"
          },
          "DOKTOR": {
            "type": "string"
          },
          "UZMANLIK": {
            "type": "string"
          },
          "bOLUM": {
            "type": "string"
          },
          "bOLUMADI": {
            "type": "string"
          },
          "rSID": {
            "type": "string"
          },
          "dRID": {
            "type": "string"
          },
          "dOKTOR": {
            "type": "string"
          },
          "uZMANLIK": {
            "type": "string"
          }
        }
      },
      "Closeable": {
        "type": "object"
      },
      "Config": {
        "type": "object",
        "properties": {
          "serverUrl": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "grantType": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "publicClient": {
            "type": "boolean"
          }
        }
      },
      "Configuration": {
        "type": "object",
        "properties": {
          "runtimeType": {
            "$ref": "#/components/schemas/RuntimeType"
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "propertyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "classes": {
            "uniqueItems": true,
            "type": "array",
            "items": {}
          },
          "instances": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Date": {
        "format": "date",
        "type": "string",
        "example": "2022-03-10T00:00:00.000Z"
      },
      "DiseaseEnum": {
        "enum": [
          "DIABETES",
          "HEARTH_DISEASE",
          "BLOOD_DISEASE",
          "CANCER",
          "HYPERTENSION",
          "OTHER"
        ],
        "type": "string"
      },
      "Doctor": {
        "type": "object",
        "properties": {
          "rsId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "practice": {
            "type": "string"
          }
        }
      },
      "DoctorDto": {
        "type": "object",
        "properties": {
          "ID": {
            "format": "int32",
            "type": "integer"
          },
          "KULLANID": {
            "format": "int32",
            "type": "integer"
          },
          "DOKTORKOD": {
            "type": "string"
          },
          "DOKTOR": {
            "type": "string"
          },
          "RESIM": {
            "type": "string"
          },
          "UZMANLIK": {
            "type": "string"
          },
          "iD": {
            "format": "int32",
            "type": "integer"
          },
          "kULLANID": {
            "format": "int32",
            "type": "integer"
          },
          "dOKTORKOD": {
            "type": "string"
          },
          "dOKTOR": {
            "type": "string"
          },
          "rESIM": {
            "type": "string"
          },
          "uZMANLIK": {
            "type": "string"
          }
        }
      },
      "DoctorMapper": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DoctorDto"
            }
          }
        }
      },
      "EntityTag": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "weak": {
            "type": "boolean"
          }
        }
      },
      "Enumeration[B": {
        "type": "object"
      },
      "Family": {
        "enum": [
          "INFORMATIONAL",
          "SUCCESSFUL",
          "REDIRECTION",
          "CLIENT_ERROR",
          "SERVER_ERROR",
          "OTHER"
        ],
        "type": "string"
      },
      "FieldMetadata": {
        "type": "object",
        "properties": {
          "fieldsMetadata": {
            "$ref": "#/components/schemas/FieldsMetadata"
          },
          "fieldName": {
            "type": "string"
          },
          "imageName": {
            "type": "string"
          },
          "listType": {
            "type": "boolean"
          },
          "imageType": {
            "type": "boolean"
          },
          "syntaxKind": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "syntaxWithDirective": {
            "type": "boolean"
          },
          "behaviour": {
            "$ref": "#/components/schemas/NullImageBehaviour"
          },
          "useImageSize": {
            "type": "boolean"
          }
        }
      },
      "FieldReplacementFormatter": {
        "type": "object",
        "properties": {
          "searchList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "replacementList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FieldsMetadata": {
        "type": "object",
        "properties": {
          "serializer": {
            "$ref": "#/components/schemas/IFieldsMetadataClassSerializer"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldMetadata"
            }
          },
          "fieldsAsList": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FieldMetadata"
            }
          },
          "fieldsAsImage": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FieldMetadata"
            }
          },
          "fieldsAsTextStyling": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FieldMetadata"
            }
          },
          "beforeTableToken": {
            "type": "string"
          },
          "afterTableToken": {
            "type": "string"
          },
          "beforeRowToken": {
            "type": "string"
          },
          "afterRowToken": {
            "type": "string"
          },
          "beforeTableCellToken": {
            "type": "string"
          },
          "afterTableCellToken": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "templateEngineKind": {
            "type": "string"
          },
          "evaluateEngineOnlyForFields": {
            "type": "boolean"
          },
          "behaviour": {
            "$ref": "#/components/schemas/NullImageBehaviour"
          },
          "useImageSize": {
            "type": "boolean"
          },
          "sortedFieldsAsList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sortedFieldsAsTextStyling": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldMetadata"
            }
          },
          "sortedFieldsAsImage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldMetadata"
            }
          },
          "customFormatters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomFormatter"
            }
          },
          "customFormatter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ICustomFormatter"
            }
          },
          "fieldReplacementFormatter": {
            "$ref": "#/components/schemas/FieldReplacementFormatter"
          }
        }
      },
      "FileDescriptor": {
        "type": "object",
        "properties": {
          "fd": {
            "format": "int32",
            "type": "integer"
          },
          "handle": {
            "format": "int64",
            "type": "integer"
          },
          "parent": {
            "$ref": "#/components/schemas/Closeable"
          },
          "otherParents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Closeable"
            }
          },
          "closed": {
            "type": "boolean"
          },
          "append": {
            "type": "boolean"
          },
          "cleanup": {
            "$ref": "#/components/schemas/PhantomCleanableFileDescriptor"
          }
        }
      },
      "GenderEnum": {
        "enum": [
          "MALE",
          "FEMALE",
          "NONE"
        ],
        "type": "string"
      },
      "GenotipMapper": {
        "type": "object",
        "properties": {
          "clinicDoctors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClinicDoctors"
            }
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "HostnameVerifier": {
        "type": "object"
      },
      "ICustomFormatter": {
        "type": "object"
      },
      "IDocumentFormatter": {
        "type": "object",
        "properties": {
          "startDocumentDirective": {
            "type": "string"
          },
          "endDocumentDirective": {
            "type": "string"
          },
          "elseDirective": {
            "type": "string"
          },
          "startNoParse": {
            "type": "string"
          },
          "endNoParse": {
            "type": "string"
          }
        }
      },
      "IEntryInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "lastModified": {
            "format": "int64",
            "type": "integer"
          },
          "reader": {
            "$ref": "#/components/schemas/Reader"
          },
          "inputStream": {
            "format": "binary",
            "type": "string"
          }
        }
      },
      "IFieldsMetadataClassSerializer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ITemplateCacheInfoProvider": {
        "type": "object"
      },
      "ITemplateEngine": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "templateCacheInfoProvider": {
            "$ref": "#/components/schemas/ITemplateCacheInfoProvider"
          },
          "configuration": {
            "$ref": "#/components/schemas/ITemplateEngineConfiguration"
          },
          "id": {
            "type": "string"
          },
          "documentFormatter": {
            "$ref": "#/components/schemas/IDocumentFormatter"
          },
          "fieldNameStartsWithUpperCase": {
            "type": "boolean"
          }
        }
      },
      "ITemplateEngineConfiguration": {
        "type": "object",
        "properties": {
          "replacment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplaceText"
            }
          }
        }
      },
      "IXDocReport": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "documentArchive": {
            "$ref": "#/components/schemas/XDocArchive"
          },
          "originalDocumentArchive": {
            "$ref": "#/components/schemas/XDocArchive"
          },
          "preprocessedDocumentArchive": {
            "$ref": "#/components/schemas/XDocArchive"
          },
          "templateEngine": {
            "$ref": "#/components/schemas/ITemplateEngine"
          },
          "fieldsMetadata": {
            "$ref": "#/components/schemas/FieldsMetadata"
          },
          "mimeMapping": {
            "$ref": "#/components/schemas/MimeMapping"
          },
          "cacheOriginalDocument": {
            "type": "boolean"
          },
          "preprocessed": {
            "type": "boolean"
          },
          "lastModified": {
            "format": "int64",
            "type": "integer"
          }
        }
      },
      "IdentityDto": {
        "type": "object",
        "properties": {
          "ID": {
            "format": "int32",
            "type": "integer"
          },
          "VATANDASLIKNO": {
            "type": "string"
          },
          "DOSYANO": {
            "type": "string"
          },
          "AD": {
            "type": "string"
          },
          "SOYAD": {
            "type": "string"
          },
          "CINSIYET": {
            "type": "string"
          },
          "DOGUMTARIH": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "DOGUMYER": {
            "type": "string"
          },
          "MESLEK": {
            "type": "string"
          },
          "MEDENIHAL": {
            "type": "string"
          },
          "KANGRUP": {
            "type": "string"
          },
          "ADRES": {
            "type": "string"
          },
          "IL": {
            "type": "string"
          },
          "ILCE": {
            "type": "string"
          },
          "ISTEL": {
            "type": "string"
          },
          "CEPTEL": {
            "type": "string"
          },
          "ILETISIM": {
            "type": "string"
          },
          "SMSISTEMIYOR": {
            "type": "boolean"
          },
          "EPOSTAISTEMIYOR": {
            "type": "boolean"
          },
          "YUPASSKISINO": {
            "type": "string"
          },
          "sigortaturu": {
            "type": "string"
          },
          "BABAADI": {
            "type": "string"
          },
          "ANAAD": {
            "type": "string"
          },
          "ANNETCNO": {
            "type": "string"
          },
          "SICILNO": {
            "type": "string"
          },
          "KARNENO": {
            "type": "string"
          },
          "yakinderecesi": {
            "type": "string"
          },
          "EVLILIKTARIHI": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "ADLIGECMIS": {
            "type": "string"
          },
          "ADLIGECMISVAR": {
            "type": "boolean"
          },
          "ADLIGECMISIVAR": {
            "type": "boolean"
          },
          "EPOSTA": {
            "type": "string"
          },
          "EVTEL": {
            "type": "string"
          },
          "iD": {
            "format": "int32",
            "type": "integer"
          },
          "vATANDASLIKNO": {
            "type": "string"
          },
          "dOSYANO": {
            "type": "string"
          },
          "aD": {
            "type": "string"
          },
          "sOYAD": {
            "type": "string"
          },
          "cINSIYET": {
            "type": "string"
          },
          "dOGUMTARIH": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "dOGUMYER": {
            "type": "string"
          },
          "mESLEK": {
            "type": "string"
          },
          "mEDENIHAL": {
            "type": "string"
          },
          "kANGRUP": {
            "type": "string"
          },
          "aDRES": {
            "type": "string"
          },
          "iL": {
            "type": "string"
          },
          "iLCE": {
            "type": "string"
          },
          "iSTEL": {
            "type": "string"
          },
          "cEPTEL": {
            "type": "string"
          },
          "iLETISIM": {
            "type": "string"
          },
          "sMSISTEMIYOR": {
            "type": "boolean"
          },
          "ePOSTAISTEMIYOR": {
            "type": "boolean"
          },
          "yUPASSKISINO": {
            "type": "string"
          },
          "bABAADI": {
            "type": "string"
          },
          "aNAAD": {
            "type": "string"
          },
          "aNNETCNO": {
            "type": "string"
          },
          "sICILNO": {
            "type": "string"
          },
          "kARNENO": {
            "type": "string"
          },
          "eVLILIKTARIHI": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "aDLIGECMIS": {
            "type": "string"
          },
          "aDLIGECMISVAR": {
            "type": "boolean"
          },
          "aDLIGECMISIVAR": {
            "type": "boolean"
          },
          "ePOSTA": {
            "type": "string"
          },
          "eVTEL": {
            "type": "string"
          }
        }
      },
      "IdentityMapper": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDto"
            }
          }
        }
      },
      "InetAddress": {
        "type": "object",
        "properties": {
          "multicastAddress": {
            "type": "boolean"
          },
          "anyLocalAddress": {
            "type": "boolean"
          },
          "loopbackAddress": {
            "type": "boolean"
          },
          "linkLocalAddress": {
            "type": "boolean"
          },
          "siteLocalAddress": {
            "type": "boolean"
          },
          "mCGlobal": {
            "type": "boolean"
          },
          "mCNodeLocal": {
            "type": "boolean"
          },
          "mCLinkLocal": {
            "type": "boolean"
          },
          "mCSiteLocal": {
            "type": "boolean"
          },
          "mCOrgLocal": {
            "type": "boolean"
          },
          "hostName": {
            "type": "string"
          },
          "address": {
            "format": "binary",
            "type": "string"
          },
          "hostAddress": {
            "type": "string"
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "properties": {
          "details": {
            "type": "string"
          }
        }
      },
      "InstanceTypeEnum": {
        "enum": [
          "SOCIAL_SECURITY_NUMBER",
          "PASSPORT_NUMBER"
        ],
        "type": "string"
      },
      "InternalServerErrorException": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/Response"
          }
        }
      },
      "Interruptible": {
        "type": "object"
      },
      "JWTParser": {
        "type": "object"
      },
      "JsonWebToken": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "rawToken": {
            "type": "string"
          },
          "issuer": {
            "type": "string"
          },
          "audience": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subject": {
            "type": "string"
          },
          "tokenID": {
            "type": "string"
          },
          "expirationTime": {
            "format": "int64",
            "type": "integer"
          },
          "issuedAtTime": {
            "format": "int64",
            "type": "integer"
          },
          "groups": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "claimNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "KeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Keycloak": {
        "type": "object",
        "properties": {
          "config": {
            "$ref": "#/components/schemas/Config"
          },
          "tokenManager": {
            "$ref": "#/components/schemas/TokenManager"
          },
          "authToken": {
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/WebTarget"
          },
          "client": {
            "$ref": "#/components/schemas/Client"
          },
          "closed": {
            "type": "boolean"
          }
        }
      },
      "KeycloakBuilder": {
        "type": "object",
        "properties": {
          "serverUrl": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "grantType": {
            "type": "string"
          },
          "resteasyClient": {
            "$ref": "#/components/schemas/Client"
          },
          "authorization": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "KeycloakProducer": {
        "type": "object",
        "properties": {
          "serverUrl": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "grantType": {
            "type": "string"
          },
          "keycloakBuilder": {
            "$ref": "#/components/schemas/KeycloakBuilder"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "uri": {
            "format": "uri",
            "type": "string"
          },
          "uriBuilder": {
            "$ref": "#/components/schemas/UriBuilder"
          },
          "rel": {
            "type": "string"
          },
          "rels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "LocalDate": {
        "format": "date",
        "type": "string",
        "example": "2022-03-10T00:00:00.000Z"
      },
      "LocalDateTime": {
        "format": "date-time",
        "type": "string",
        "example": "2022-03-10T12:15:50.000Z"
      },
      "Locale": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "script": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "variant": {
            "type": "string"
          },
          "extensionKeys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "format": "byte",
              "type": "string"
            }
          },
          "unicodeLocaleAttributes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unicodeLocaleKeys": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iSO3Language": {
            "type": "string"
          },
          "iSO3Country": {
            "type": "string"
          },
          "displayLanguage": {
            "type": "string"
          },
          "displayScript": {
            "type": "string"
          },
          "displayCountry": {
            "type": "string"
          },
          "displayVariant": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "Lookup API": {
        "type": "object"
      },
      "MediaType": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "wildcardType": {
            "type": "boolean"
          },
          "wildcardSubtype": {
            "type": "boolean"
          }
        }
      },
      "MimeMapping": {
        "type": "object",
        "properties": {
          "extension": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          }
        }
      },
      "MultivaluedMapStringObject": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "MultivaluedMapStringString": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "NewCookie": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "domain": {
            "type": "string"
          },
          "comment": {
            "type": "string"
          },
          "maxAge": {
            "format": "int32",
            "type": "integer"
          },
          "expiry": {
            "$ref": "#/components/schemas/Date"
          },
          "secure": {
            "type": "boolean"
          },
          "httpOnly": {
            "type": "boolean"
          }
        }
      },
      "NotFoundException": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/Response"
          }
        }
      },
      "NullImageBehaviour": {
        "enum": [
          "ThrowsError",
          "RemoveImageTemplate",
          "KeepImageTemplate"
        ],
        "type": "string"
      },
      "OrderDetailDto": {
        "type": "object",
        "properties": {
          "ID": {
            "format": "int32",
            "type": "integer"
          },
          "ORDERID": {
            "format": "int32",
            "type": "integer"
          },
          "DETAYTURU": {
            "type": "integer"
          },
          "KACKEZ": {
            "type": "integer"
          },
          "KACDOZ": {
            "format": "double",
            "type": "number"
          },
          "BIRIM": {
            "type": "string"
          },
          "ACIKLAMA": {
            "type": "string"
          },
          "KODU": {
            "type": "string"
          },
          "ADI": {
            "type": "string"
          },
          "KULLANIMSEKLI": {
            "format": "int32",
            "type": "integer"
          },
          "DURDURULMA": {
            "type": "boolean"
          },
          "BASSAATI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "DURDURULMATARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "iD": {
            "format": "int32",
            "type": "integer"
          },
          "oRDERID": {
            "format": "int32",
            "type": "integer"
          },
          "dETAYTURU": {
            "type": "integer"
          },
          "kACKEZ": {
            "type": "integer"
          },
          "kACDOZ": {
            "format": "double",
            "type": "number"
          },
          "bIRIM": {
            "type": "string"
          },
          "aCIKLAMA": {
            "type": "string"
          },
          "kODU": {
            "type": "string"
          },
          "aDI": {
            "type": "string"
          },
          "kULLANIMSEKLI": {
            "format": "int32",
            "type": "integer"
          },
          "dURDURULMA": {
            "type": "boolean"
          },
          "bASSAATI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "dURDURULMATARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "eKLENMETARIHI": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocalDateTime"
              },
              {
                "readOnly": true
              }
            ]
          },
          "dR": {
            "type": "string",
            "readOnly": true
          },
          "eKLEYEN": {
            "type": "string",
            "readOnly": true
          },
          "eKLEMETARIHI": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocalDateTime"
              },
              {
                "readOnly": true
              }
            ]
          },
          "dEGISTIREN": {
            "type": "string",
            "readOnly": true
          },
          "dEGISTIRMETARIHI": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocalDateTime"
              },
              {
                "readOnly": true
              }
            ]
          },
          "dURDURAN": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "OrderDetailMapper": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderDetailDto"
            }
          }
        }
      },
      "OrderPatientDto": {
        "type": "object",
        "properties": {
          "ID": {
            "format": "int32",
            "type": "integer"
          },
          "DOSYANO": {
            "type": "string"
          },
          "GELISNO": {
            "type": "integer"
          },
          "DR": {
            "type": "string"
          },
          "EKLEYEN": {
            "type": "string"
          },
          "DEGISTIREN": {
            "type": "string"
          },
          "EKLEMETARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "ONAYZAMANI": {
            "$ref": "#/components/schemas/Date"
          },
          "SIRANO": {
            "type": "integer"
          },
          "DURUM": {
            "type": "integer"
          },
          "NOTLAR": {
            "type": "string"
          },
          "SOZEL": {
            "type": "boolean"
          },
          "UYGGELISNO": {
            "type": "integer"
          },
          "PLANTARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "DEGISTIRMETARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "EIMZA": {
            "format": "int32",
            "type": "integer"
          },
          "GELISID": {
            "format": "int32",
            "type": "integer"
          },
          "EIMZAKAYNAK": {
            "type": "integer"
          },
          "iD": {
            "format": "int32",
            "type": "integer"
          },
          "dOSYANO": {
            "type": "string"
          },
          "gELISNO": {
            "type": "integer"
          },
          "dR": {
            "type": "string"
          },
          "eKLEYEN": {
            "type": "string"
          },
          "dEGISTIREN": {
            "type": "string"
          },
          "eKLEMETARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "oNAYZAMANI": {
            "$ref": "#/components/schemas/Date"
          },
          "sIRANO": {
            "type": "integer"
          },
          "dURUM": {
            "type": "integer"
          },
          "nOTLAR": {
            "type": "string"
          },
          "sOZEL": {
            "type": "boolean"
          },
          "uYGGELISNO": {
            "type": "integer"
          },
          "pLANTARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "dEGISTIRMETARIHI": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "eIMZA": {
            "format": "int32",
            "type": "integer"
          },
          "gELISID": {
            "format": "int32",
            "type": "integer"
          },
          "eIMZAKAYNAK": {
            "type": "integer"
          }
        }
      },
      "OrderPatientMapper": {
        "type": "object",
        "properties": {
          "list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPatientDto"
            }
          }
        }
      },
      "OutputStream": {
        "type": "object"
      },
      "PeriodEnum": {
        "enum": [
          "ONETIME",
          "HOUR",
          "DAY",
          "WEEK",
          "MONTH",
          "YEAR"
        ],
        "type": "string"
      },
      "PhantomCleanableFileDescriptor": {
        "type": "object",
        "properties": {
          "prev": {
            "$ref": "#/components/schemas/PhantomCleanableObject"
          },
          "next": {
            "$ref": "#/components/schemas/PhantomCleanableObject"
          },
          "list": {
            "$ref": "#/components/schemas/PhantomCleanableObject"
          },
          "listEmpty": {
            "type": "boolean"
          },
          "enqueued": {
            "type": "boolean"
          }
        }
      },
      "PhantomCleanableObject": {
        "type": "object",
        "properties": {
          "prev": {
            "$ref": "#/components/schemas/PhantomCleanableObject"
          },
          "next": {
            "$ref": "#/components/schemas/PhantomCleanableObject"
          },
          "list": {
            "$ref": "#/components/schemas/PhantomCleanableObject"
          },
          "listEmpty": {
            "type": "boolean"
          },
          "enqueued": {
            "type": "boolean"
          }
        }
      },
      "Practitioner API": {
        "type": "object",
        "properties": {
          "realm": {
            "type": "string"
          },
          "jwtToken": {
            "$ref": "#/components/schemas/JsonWebToken"
          },
          "service": {
            "$ref": "#/components/schemas/GenotipMapper"
          },
          "doctorService": {
            "$ref": "#/components/schemas/DoctorMapper"
          },
          "arrivalService": {
            "$ref": "#/components/schemas/ArrivalMapper"
          },
          "identityService": {
            "$ref": "#/components/schemas/IdentityMapper"
          },
          "orderPatientService": {
            "$ref": "#/components/schemas/OrderPatientMapper"
          },
          "orderDetailService": {
            "$ref": "#/components/schemas/OrderDetailMapper"
          },
          "reportEngine": {
            "$ref": "#/components/schemas/ReportEngine"
          },
          "adminKeycloak": {
            "$ref": "#/components/schemas/Keycloak"
          },
          "currentDoctor": {
            "$ref": "#/components/schemas/DoctorDto"
          },
          "currentDoctorId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Principal": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "Private API": {
        "type": "object",
        "properties": {
          "jwt": {
            "$ref": "#/components/schemas/JsonWebToken"
          },
          "service": {
            "$ref": "#/components/schemas/GenotipMapper"
          },
          "reportEngine": {
            "$ref": "#/components/schemas/ReportEngine"
          },
          "userById": {
            "$ref": "#/components/schemas/User"
          },
          "userImage": {
            "$ref": "#/components/schemas/Response"
          },
          "allergies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserAllergy"
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserContact"
            }
          },
          "dieases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDisease"
            }
          },
          "dieasesInFamily": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDiseaseInFamily"
            }
          },
          "drugUsages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDrugUsage"
            }
          },
          "userSurgeries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserSurgery"
            }
          },
          "userReports": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReportItem"
              }
            }
          },
          "userFavoriteReports": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportItem"
            }
          }
        }
      },
      "PublicKey": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string"
          },
          "format": {
            "type": "string"
          },
          "encoded": {
            "format": "binary",
            "type": "string"
          }
        }
      },
      "Reader": {
        "type": "object",
        "properties": {
          "lock": {
            "type": "object"
          },
          "skipBuffer": {
            "type": "array",
            "items": {
              "format": "byte",
              "type": "string"
            }
          }
        }
      },
      "RelationshipEnum": {
        "enum": [
          "HUSBAND",
          "WIFE",
          "MOTHER",
          "FATHER",
          "SISTER",
          "BROTHER",
          "DAUGHTER",
          "SON",
          "OTHER"
        ],
        "type": "string"
      },
      "ReplaceText": {
        "type": "object",
        "properties": {
          "oldText": {
            "type": "string"
          },
          "newText": {
            "type": "string"
          }
        }
      },
      "ReportEngine": {
        "type": "object",
        "properties": {
          "datePattern": {
            "type": "string"
          },
          "templates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IXDocReport"
            }
          }
        }
      },
      "ReportItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "reportType": {
            "$ref": "#/components/schemas/ReportTypeEnum"
          },
          "description": {
            "type": "string"
          },
          "clinic": {
            "type": "string"
          },
          "createdAt": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "favorite": {
            "type": "boolean"
          }
        }
      },
      "ReportTypeEnum": {
        "enum": [
          "MEDICATION",
          "PRESCRIPTION",
          "EPICRISIS",
          "LABRESULT",
          "RADIOLOGY",
          "PATHOLOGY"
        ],
        "type": "string"
      },
      "ReqAddOrder": {
        "type": "object",
        "properties": {
          "kimlikId": {
            "format": "int32",
            "type": "integer"
          },
          "gelisNo": {
            "type": "integer"
          },
          "notlar": {
            "type": "string"
          },
          "sozel": {
            "type": "boolean"
          },
          "orderTarih": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        }
      },
      "ReqDeleteOrder": {
        "type": "object",
        "properties": {
          "kimlikId": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ReqUpdateOrder": {
        "type": "object",
        "properties": {
          "kimlikId": {
            "format": "int32",
            "type": "integer"
          },
          "gelisNo": {
            "type": "integer"
          },
          "notlar": {
            "type": "string"
          },
          "sozel": {
            "type": "boolean"
          },
          "orderTarih": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "siraNo": {
            "type": "integer"
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "status": {
            "format": "int32",
            "type": "integer"
          },
          "statusInfo": {
            "$ref": "#/components/schemas/StatusType"
          },
          "entity": {
            "type": "object"
          },
          "mediaType": {
            "$ref": "#/components/schemas/MediaType"
          },
          "language": {
            "$ref": "#/components/schemas/Locale"
          },
          "length": {
            "format": "int32",
            "type": "integer"
          },
          "allowedMethods": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cookies": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NewCookie"
            }
          },
          "entityTag": {
            "$ref": "#/components/schemas/EntityTag"
          },
          "date": {
            "$ref": "#/components/schemas/Date"
          },
          "lastModified": {
            "$ref": "#/components/schemas/Date"
          },
          "location": {
            "format": "uri",
            "type": "string"
          },
          "links": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/MultivaluedMapStringObject"
          },
          "headers": {
            "$ref": "#/components/schemas/MultivaluedMapStringObject"
          },
          "stringHeaders": {
            "$ref": "#/components/schemas/MultivaluedMapStringString"
          }
        }
      },
      "RuntimeType": {
        "enum": [
          "CLIENT",
          "SERVER"
        ],
        "type": "string"
      },
      "SNIMatcher": {
        "type": "object",
        "properties": {
          "type": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SNIServerName": {
        "type": "object",
        "properties": {
          "type": {
            "format": "int32",
            "type": "integer"
          },
          "encoded": {
            "format": "binary",
            "type": "string"
          }
        }
      },
      "SSLContext": {
        "type": "object",
        "properties": {
          "provider": {
            "$ref": "#/components/schemas/Provider"
          },
          "contextSpi": {
            "$ref": "#/components/schemas/SSLContextSpi"
          },
          "protocol": {
            "type": "string"
          },
          "socketFactory": {
            "$ref": "#/components/schemas/SSLSocketFactory"
          },
          "serverSocketFactory": {
            "$ref": "#/components/schemas/SSLServerSocketFactory"
          },
          "serverSessionContext": {
            "$ref": "#/components/schemas/SSLSessionContext"
          },
          "clientSessionContext": {
            "$ref": "#/components/schemas/SSLSessionContext"
          },
          "defaultSSLParameters": {
            "$ref": "#/components/schemas/SSLParameters"
          },
          "supportedSSLParameters": {
            "$ref": "#/components/schemas/SSLParameters"
          }
        }
      },
      "SSLContextSpi": {
        "type": "object",
        "properties": {
          "defaultSocket": {
            "$ref": "#/components/schemas/SSLSocket"
          }
        }
      },
      "SSLParameters": {
        "type": "object",
        "properties": {
          "cipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "protocols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wantClientAuth": {
            "type": "boolean"
          },
          "needClientAuth": {
            "type": "boolean"
          },
          "identificationAlgorithm": {
            "type": "string"
          },
          "algorithmConstraints": {
            "$ref": "#/components/schemas/AlgorithmConstraints"
          },
          "sniNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SNIServerName"
            }
          },
          "sniMatchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SNIMatcher"
            }
          },
          "preferLocalCipherSuites": {
            "type": "boolean"
          },
          "enableRetransmissions": {
            "type": "boolean"
          },
          "maximumPacketSize": {
            "format": "int32",
            "type": "integer"
          },
          "applicationProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "signatureSchemes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "endpointIdentificationAlgorithm": {
            "type": "string"
          },
          "serverNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SNIServerName"
            }
          },
          "sNIMatchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SNIMatcher"
            }
          },
          "useCipherSuitesOrder": {
            "type": "boolean"
          }
        }
      },
      "SSLServerSocketFactory": {
        "type": "object",
        "properties": {
          "defaultCipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportedCipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SSLSession": {
        "type": "object",
        "properties": {
          "id": {
            "format": "binary",
            "type": "string"
          },
          "sessionContext": {
            "$ref": "#/components/schemas/SSLSessionContext"
          },
          "creationTime": {
            "format": "int64",
            "type": "integer"
          },
          "lastAccessedTime": {
            "format": "int64",
            "type": "integer"
          },
          "valid": {
            "type": "boolean"
          },
          "valueNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "peerCertificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            }
          },
          "localCertificates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Certificate"
            }
          },
          "peerCertificateChain": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/X509Certificate"
            },
            "deprecated": true
          },
          "peerPrincipal": {
            "$ref": "#/components/schemas/Principal"
          },
          "localPrincipal": {
            "$ref": "#/components/schemas/Principal"
          },
          "cipherSuite": {
            "type": "string"
          },
          "protocol": {
            "type": "string"
          },
          "peerHost": {
            "type": "string"
          },
          "peerPort": {
            "format": "int32",
            "type": "integer"
          },
          "packetBufferSize": {
            "format": "int32",
            "type": "integer"
          },
          "applicationBufferSize": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SSLSessionContext": {
        "type": "object",
        "properties": {
          "ids": {
            "$ref": "#/components/schemas/Enumeration[B"
          },
          "sessionTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "sessionCacheSize": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SSLSocket": {
        "type": "object",
        "properties": {
          "created": {
            "type": "boolean"
          },
          "bound": {
            "type": "boolean"
          },
          "connected": {
            "type": "boolean"
          },
          "closed": {
            "type": "boolean"
          },
          "closeLock": {
            "type": "object"
          },
          "shutIn": {
            "type": "boolean"
          },
          "shutOut": {
            "type": "boolean"
          },
          "impl": {
            "$ref": "#/components/schemas/SocketImpl"
          },
          "in": {
            "format": "binary",
            "type": "string"
          },
          "out": {
            "$ref": "#/components/schemas/OutputStream"
          },
          "options": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "inetAddress": {
            "$ref": "#/components/schemas/InetAddress"
          },
          "localAddress": {
            "$ref": "#/components/schemas/InetAddress"
          },
          "port": {
            "format": "int32",
            "type": "integer"
          },
          "localPort": {
            "format": "int32",
            "type": "integer"
          },
          "remoteSocketAddress": {
            "$ref": "#/components/schemas/SocketAddress"
          },
          "localSocketAddress": {
            "$ref": "#/components/schemas/SocketAddress"
          },
          "channel": {
            "$ref": "#/components/schemas/SocketChannel"
          },
          "inputStream": {
            "format": "binary",
            "type": "string"
          },
          "outputStream": {
            "$ref": "#/components/schemas/OutputStream"
          },
          "tcpNoDelay": {
            "type": "boolean"
          },
          "soLinger": {
            "format": "int32",
            "type": "integer"
          },
          "oOBInline": {
            "type": "boolean"
          },
          "soTimeout": {
            "format": "int32",
            "type": "integer"
          },
          "sendBufferSize": {
            "format": "int32",
            "type": "integer"
          },
          "receiveBufferSize": {
            "format": "int32",
            "type": "integer"
          },
          "keepAlive": {
            "type": "boolean"
          },
          "trafficClass": {
            "format": "int32",
            "type": "integer"
          },
          "reuseAddress": {
            "type": "boolean"
          },
          "inputShutdown": {
            "type": "boolean"
          },
          "outputShutdown": {
            "type": "boolean"
          },
          "supportedCipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledCipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportedProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enabledProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "session": {
            "$ref": "#/components/schemas/SSLSession"
          },
          "handshakeSession": {
            "$ref": "#/components/schemas/SSLSession"
          },
          "useClientMode": {
            "type": "boolean"
          },
          "needClientAuth": {
            "type": "boolean"
          },
          "wantClientAuth": {
            "type": "boolean"
          },
          "enableSessionCreation": {
            "type": "boolean"
          },
          "sSLParameters": {
            "$ref": "#/components/schemas/SSLParameters"
          },
          "applicationProtocol": {
            "type": "string"
          },
          "handshakeApplicationProtocol": {
            "type": "string"
          },
          "handshakeApplicationProtocolSelector": {
            "$ref": "#/components/schemas/BiFunctionSSLSocketListStringString"
          }
        }
      },
      "SSLSocketFactory": {
        "type": "object",
        "properties": {
          "defaultCipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "supportedCipherSuites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SelectionKey": {
        "type": "object",
        "properties": {
          "attachment": {
            "type": "object"
          },
          "valid": {
            "type": "boolean"
          },
          "readable": {
            "type": "boolean"
          },
          "writable": {
            "type": "boolean"
          },
          "connectable": {
            "type": "boolean"
          },
          "acceptable": {
            "type": "boolean"
          }
        }
      },
      "SelectorProvider": {
        "type": "object"
      },
      "Slot": {
        "type": "object",
        "properties": {
          "clinic": {
            "type": "string"
          },
          "doctor": {
            "type": "string"
          },
          "date": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "slotOffset": {
            "format": "int32",
            "type": "integer"
          },
          "slotFreeTime": {
            "format": "int32",
            "type": "integer"
          },
          "slotTime": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "SlotRequest": {
        "type": "object",
        "properties": {
          "clinic": {
            "type": "string"
          },
          "doctor": {
            "type": "string"
          },
          "date": {
            "$ref": "#/components/schemas/LocalDate"
          }
        }
      },
      "SocketAddress": {
        "type": "object"
      },
      "SocketChannel": {
        "type": "object",
        "properties": {
          "open": {
            "type": "boolean"
          },
          "closeLock": {
            "type": "object"
          },
          "closed": {
            "type": "boolean"
          },
          "interruptor": {
            "$ref": "#/components/schemas/Interruptible"
          },
          "interrupted": {
            "type": "object"
          },
          "provider": {
            "$ref": "#/components/schemas/SelectorProvider"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectionKey"
            }
          },
          "keyCount": {
            "format": "int32",
            "type": "integer"
          },
          "keyLock": {
            "type": "object"
          },
          "regLock": {
            "type": "object"
          },
          "nonBlocking": {
            "type": "boolean"
          },
          "registered": {
            "type": "boolean"
          },
          "blocking": {
            "type": "boolean"
          },
          "connected": {
            "type": "boolean"
          },
          "connectionPending": {
            "type": "boolean"
          },
          "remoteAddress": {
            "$ref": "#/components/schemas/SocketAddress"
          },
          "localAddress": {
            "$ref": "#/components/schemas/SocketAddress"
          }
        }
      },
      "SocketImpl": {
        "type": "object",
        "properties": {
          "fd": {
            "$ref": "#/components/schemas/FileDescriptor"
          },
          "address": {
            "$ref": "#/components/schemas/InetAddress"
          },
          "port": {
            "format": "int32",
            "type": "integer"
          },
          "localport": {
            "format": "int32",
            "type": "integer"
          },
          "inputStream": {
            "format": "binary",
            "type": "string"
          },
          "outputStream": {
            "$ref": "#/components/schemas/OutputStream"
          },
          "fileDescriptor": {
            "$ref": "#/components/schemas/FileDescriptor"
          },
          "inetAddress": {
            "$ref": "#/components/schemas/InetAddress"
          },
          "localPort": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "StatusType": {
        "type": "object",
        "properties": {
          "statusCode": {
            "format": "int32",
            "type": "integer"
          },
          "family": {
            "$ref": "#/components/schemas/Family"
          },
          "reasonPhrase": {
            "type": "string"
          }
        }
      },
      "TokenManager": {
        "type": "object",
        "properties": {
          "currentToken": {
            "$ref": "#/components/schemas/AccessTokenResponse"
          },
          "expirationTime": {
            "format": "int64",
            "type": "integer"
          },
          "minTokenValidity": {
            "format": "int64",
            "type": "integer"
          },
          "config": {
            "$ref": "#/components/schemas/Config"
          },
          "tokenService": {
            "$ref": "#/components/schemas/TokenService"
          },
          "accessTokenGrantType": {
            "type": "string"
          },
          "accessTokenString": {
            "type": "string"
          },
          "accessToken": {
            "$ref": "#/components/schemas/AccessTokenResponse"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          }
        }
      },
      "TokenService": {
        "type": "object"
      },
      "UriBuilder": {
        "type": "object"
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "instanceType": {
            "$ref": "#/components/schemas/InstanceTypeEnum"
          },
          "instanceNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderEnum"
          },
          "bloodGroup": {
            "$ref": "#/components/schemas/BloodGroupEnum"
          },
          "birthDate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "mobilePhone": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          }
        }
      },
      "UserAllergy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "allergy": {
            "$ref": "#/components/schemas/AllergyEnum"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UserContact": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "relationship": {
            "$ref": "#/components/schemas/RelationshipEnum"
          }
        }
      },
      "UserDisease": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "disease": {
            "$ref": "#/components/schemas/DiseaseEnum"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UserDiseaseInFamily": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "disease": {
            "$ref": "#/components/schemas/DiseaseEnum"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "UserDrugUsage": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "drug": {
            "type": "string"
          },
          "quantity": {
            "format": "double",
            "type": "number"
          },
          "periodNumeric": {
            "format": "int32",
            "type": "integer"
          },
          "periodMetric": {
            "$ref": "#/components/schemas/PeriodEnum"
          }
        }
      },
      "UserFavoriteReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "report": {
            "$ref": "#/components/schemas/ReportTypeEnum"
          },
          "reportId": {
            "type": "string"
          }
        }
      },
      "UserSurgery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "surgery": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "operationDate": {
            "$ref": "#/components/schemas/LocalDate"
          }
        }
      },
      "WebTarget": {
        "type": "object",
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/Configuration"
          },
          "uri": {
            "format": "uri",
            "type": "string"
          },
          "uriBuilder": {
            "$ref": "#/components/schemas/UriBuilder"
          }
        }
      },
      "X509Certificate": {
        "type": "object",
        "properties": {
          "encoded": {
            "format": "binary",
            "type": "string"
          },
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          },
          "version": {
            "format": "int32",
            "type": "integer"
          },
          "serialNumber": {
            "type": "integer"
          },
          "issuerDN": {
            "$ref": "#/components/schemas/Principal"
          },
          "subjectDN": {
            "$ref": "#/components/schemas/Principal"
          },
          "notBefore": {
            "$ref": "#/components/schemas/Date"
          },
          "notAfter": {
            "$ref": "#/components/schemas/Date"
          },
          "sigAlgName": {
            "type": "string"
          },
          "sigAlgOID": {
            "type": "string"
          },
          "sigAlgParams": {
            "format": "binary",
            "type": "string"
          }
        },
        "deprecated": true
      },
      "XDocArchive": {
        "type": "object",
        "properties": {
          "cacheEntries": {
            "type": "object",
            "additionalProperties": {
              "format": "binary",
              "type": "string"
            }
          },
          "cacheEntriesInfo": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/IEntryInfo"
            }
          },
          "lastModifiedEntries": {
            "type": "object",
            "additionalProperties": {
              "format": "int64",
              "type": "integer"
            }
          },
          "cacheEntriesWilcard": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "entryNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trackLastModified": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuthentication": {
        "type": "http",
        "description": "Authentication needed to access core application",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      },
      "SecurityScheme": {
        "type": "oauth2",
        "description": "Authentication",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://keycloak.genyazilim.com/realms/hastanegrubu/protocol/openid-connect/auth",
            "tokenUrl": "https://keycloak.genyazilim.com/realms/hastanegrubu/protocol/openid-connect/token/introspect",
            "refreshUrl": "https://keycloak.genyazilim.com/realms/hastanegrubu/protocol/openid-connect/token"
          }
        }
      }
    }
  }
}
